using Newtonsoft.Json;

namespace BridgingTheGap.Api.Models;

/// <summary>
/// Api Error Response Model <br></br>
/// based on <see href="https://www.rfc-editor.org/rfc/rfc9457.html"/> 
/// </summary>
public class ApiErrorResponse
{
    /// <summary>
    /// A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem,
    /// except for purposes of localization (e.g., using proactive content negotiation
    /// <see href="https://www.rfc-editor.org/rfc/rfc7231.html#section-3.4"/>)
    /// </summary>
    public string Title { get; set; }

    /// <summary>
    /// A human-readable explanation specific to this occurrence of the problem.
    /// </summary>
    public string Details { get; set; }

    /// <summary>
    /// The HTTP status code <see href="https://www.rfc-editor.org/rfc/rfc7231.html#section-6"/>
    /// generated by the origin server for this occurrence of the problem.
    /// </summary>
    public int Status { get; set; }

    /// <summary>
    /// An application-specific error code, expressed as a string value.
    /// </summary>
    [JsonProperty(DefaultValueHandling = DefaultValueHandling.Ignore)]
    public string Code { get; set; }
}

/// <summary>
/// Api Error Response Model with custom error payload<br></br>
/// based on <see href="https://www.rfc-editor.org/rfc/rfc9457.html"/> 
/// </summary>
public class ApiErrorResponse<TPayload> : ApiErrorResponse
{
    [JsonProperty(DefaultValueHandling = DefaultValueHandling.Ignore)]
    public TPayload Payload { get; set; }
}